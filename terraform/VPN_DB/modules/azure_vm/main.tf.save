resource "azurerm_resource_group" "example" {
  name     = "my_resource_group"
  location = "West Europe"
}

resource "azurerm_virtual_network" "example" {
  name                = "example-network"
  address_space       = ["10.0.0.0/16"]
  location            = azurerm_resource_group.example.location
  resource_group_name = azurerm_resource_group.example.name
}

resource "azurerm_subnet" "backend" {
  name                   = "backend"
  resource_group_name    = azurerm_resource_group.example.name
  virtual_network_name   = azurerm_virtual_network.example.name
  address_prefixes       = ["10.0.2.0/24"]

resource "azurerm_subnet" "frontend" {
  name                 = "frontend"
  resource_group_name  = azurerm_resource_group.example.name
  virtual_network_name = azurerm_virtual_network.example.name
  address_prefixes     = ["10.0.3.0/24"]
}

resource "azurerm_public_ip" "example" {
  name                    = "test-pip"
  location                = azurerm_resource_group.example.location
  resource_group_name     = azurerm_resource_group.example.name
  allocation_method       = "Static"
  idle_timeout_in_minutes = 30
}

resource "azurerm_public_ip" "gateway" {
  name                = "ip_gateway"
  resource_group_name = azurerm_resource_group.example.name
  location            = azurerm_resource_group.example.location
  allocation_method   = "Dynamic"
}

resource "azurerm_network_interface" "example" { name = "example-nic" location = azurerm_resource_group.example.location 
  resource_group_name = azurerm_resource_group.example.name ip_configuration {
    name = "internal" subnet_id = azurerm_subnet.backend.id private_ip_address_allocation = "Dynamic" public_ip_address_id = 
    azurerm_public_ip.example.id
  }
}
resource "azurerm_linux_virtual_machine" "example" { name = "example-machine" resource_group_name = 
  azurerm_resource_group.example.name location = azurerm_resource_group.example.location size = "Standard_F2" admin_username = 
  "grishenkovitali" network_interface_ids = [
    azurerm_network_interface.example.id, ] admin_ssh_key { username = "grishenkovitali" public_key = file("~/.ssh/id_rsa.pub")
  }
  os_disk { caching = "ReadWrite" storage_account_type = "Standard_LRS"
  }
  source_image_reference { publisher = "Debian" offer = "debian-10" sku = "10" version = "latest"
  }
    connection { type = "ssh" user = "grishenkovitali" private_key = file("~/.ssh/id_rsa") host = 
      azurerm_public_ip.example.ip_address
      }
 provisioner "remote-exec" { inline = [ "sudo apt-get update | apt upgrade -y", "sudo apt-get install apache2 -y", "sudo apt 
          install apt-transport-https ca-certificates curl gnupg2 software-properties-common -y", "curl -fsSL 
          https://download.docker.com/linux/debian/gpg | sudo apt-key add -", "sudo add-apt-repository 'deb [arch=amd64] 
          https://download.docker.com/linux/debian $(lsb_release -cs) stable'", "sudo apt update", "sudo apt install docker-ce 
          -y", "sudo apt install docker-compose -y"
         ]
      }
 }
locals { backend_address_pool_name = "azurerm_virtual_network.example.name-beap" frontend_port_name = 
  "azurerm_virtual_network.example.name-feport" frontend_ip_configuration_name = "azurerm_virtual_network.example.name-feip" 
  http_setting_name = "azurerm_virtual_network.example.name-be-htst" listener_name = 
  "azurerm_virtual_network.example.name-httplstn" request_routing_rule_name = "azurerm_virtual_network.example.name-rqrt" 
  redirect_configuration_name = "azurerm_virtual_network.example.name-rdrcfg"
}
resource "azurerm_application_gateway" "network" { name = "example-appgateway" resource_group_name = 
  azurerm_resource_group.example.name location = azurerm_resource_group.example.location sku {
    name = "Standard_Small" tier = "Standard" capacity = 2
  }
  gateway_ip_configuration { name = "my-gateway-ip-configuration" subnet_id = azurerm_subnet.frontend.id
  }
  frontend_port { name = local.frontend_port_name port = 80
  }
  frontend_ip_configuration { name = local.frontend_ip_configuration_name public_ip_address_id = azurerm_public_ip.gateway.id
  }
  backend_address_pool { name = local.backend_address_pool_name ip_addresses = 
    [azurerm_linux_virtual_machine.example.private_ip_address]
  }
  backend_http_settings { name = local.http_setting_name cookie_based_affinity = "Disabled" port = 80 protocol = "Http" 
    request_timeout = 30
  }
  http_listener { name = local.listener_name frontend_ip_configuration_name = local.frontend_ip_configuration_name 
    frontend_port_name = local.frontend_port_name protocol = "Http"
  }
  request_routing_rule { name = local.request_routing_rule_name rule_type = "Basic" http_listener_name = local.listener_name 
    backend_address_pool_name = local.backend_address_pool_name backend_http_settings_name = local.http_setting_name
  }
}
